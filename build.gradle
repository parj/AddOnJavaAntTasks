apply plugin: 'java'
apply plugin:'application'
apply plugin: 'maven'

// -- For application plugin
mainClassName = 'org.pm.webdav.Push'

repositories {
    mavenCentral()
}

List compileAll = [ "org.apache.ant:ant:1.8.1", "junit:junit:4.0", "log4j:log4j:1.2.16", //All
				    "xmlunit:xmlunit:1.3", "net.sourceforge.jexcelapi:jxl:2.6.12", //org.pm.xml.AntXMLUnit
				    "net.sf.opencsv:opencsv:2.0", //org.pm.csv.diff
				    "net.sourceforge.jexcelapi:jxl:2.6.10", //org.pm.csv.AntCsvToExcel
                    "commons-codec:commons-codec:1.6",
                    "commons-httpclient:commons-httpclient:3.0",
                    "commons-logging:commons-logging:1.1.1",
                    "org.apache.jackrabbit:jackrabbit-webdav:2.1.1",
                    "org.slf4j:slf4j-api:1.5.8",
                    "org.slf4j:slf4j-log4j12:1.5.2"  //org.pm.AntDav
				   ]
dependencies {
    compile compileAll
    runtime fileTree(dir: 'build/libs', include: '*.jar')
}

configurations {
    runtime {
        //extendsFrom compile
        fileTree(dir: 'build/libs', include: '*.jar')
    }
}

tasks.withType(Compile) {
    options.encoding = 'UTF-8'
}

uploadArchives {
    repositories {
        mavenDeployer {
            pom.version = '2.0-SNAPSHOT'
            pom.groupId = 'org.pm'
            pom.artifactId = 'anttasks'
        }
    }
}
task push << {
    ant.taskdef(name: 'push', classname: 'org.pm.webdav.Push', classpath: configurations.runtime.asPath)
    ant.push(user: 'admin', password: "admin", url: "http://localhost:8080/repository/default", overwrite: true) {
        fileset(dir: 'src/test/resources/webdav', includes: '*.csv')
    }
}

task pull << {
    ant.taskdef(name: 'pull', classname: 'org.pm.webdav.Pull', classpath: configurations.runtime.asPath)
    ant.pull(user: 'admin', password: "admin", url: "http://localhost:8080/repository/default",
            file: "output.csv",
            outFile: "src/test/resources/webdav/output.csv",
            overwrite: true)
}